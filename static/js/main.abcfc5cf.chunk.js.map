{"version":3,"sources":["components/Navbar.js","components/Login.js","components/Signup.js","components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","type","id","to","Login","name","value","history","useHistory","useState","Email","Password","login","userlogin","handleLogin","e","target","postlogindata","a","preventDefault","fetch","method","headers","body","JSON","stringify","res","json","data","status","error","window","alert","push","htmlFor","onChange","autoComplete","placeholder","onClick","alt","src","Signup","Name","cPassword","user","setUser","handleInputs","PostData","email","password","cpassword","useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","Dashboard","classes","message","storedata","message_list","storelist","like","setlike","dislike","setdislike","like_id","setlike_id","dislike_id","setdislike_id","callDashboard","Error","getter","console","log","then","ok","jsonRes","useEffect","map","element","undefined","messages","length","messenger","index","Card","CardHeader","avatar","Avatar","style","backgroundColor","charAt","action","IconButton","scrollTo","top","behavior","_id","data1","document","getElementById","new_message","res1","title","subheader","CardContent","Typography","variant","color","component","CardActions","disableSpacing","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.abcfc5cf.chunk.js","sourcesContent":["import React from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport './Navbar.css';\r\nimport { NavLink } from 'react-router-dom';\r\nconst Navbar = () => {\r\n    return (\r\n           <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n  <h1 className=\"navbar-brand\">Reach<span className=\"me\">ME</span></h1>\r\n  <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n\r\n  <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item active\">\r\n        <NavLink className=\"nav-link\" to=\"/\">DashBoard</NavLink>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <NavLink className=\"nav-link\" to=\"/signUp\">SignUp</NavLink>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <NavLink className=\"nav-link\" to=\"/login\">Login</NavLink>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</nav> \r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React,{useState} from 'react'\r\nimport './Login.css'\r\nimport {NavLink,useHistory} from 'react-router-dom'\r\nconst Login = () => {\r\n    const history=useHistory();\r\n    const [login,userlogin]=useState(\r\n        {\r\n            Email:\"\",\r\n            Password:\"\"\r\n        }\r\n    )\r\n    let name,value;\r\n    const handleLogin=(e)=>\r\n    {\r\n     name=e.target.name;\r\n     value=e.target.value;\r\n     userlogin({...login,[name]:value})\r\n\r\n    }\r\n    const postlogindata=async (e)=>\r\n    {\r\n     e.preventDefault();\r\n     const {Email,Password}=login;\r\n     const res= await fetch('/signin',\r\n     {\r\n         method:\"POST\",\r\n         headers:{\r\n             \"Content-Type\":\"application/json\",\r\n             \r\n         },\r\n         body:JSON.stringify(\r\n             {\r\n                 Email,\r\n                 Password\r\n             }\r\n         )\r\n         \r\n     })\r\n     const data=await  res.json();\r\n    if(data.status===400||data.error===\"Invalid Credentials\")\r\n    {\r\n     window.alert(\"Invalid Credentials\");\r\n    }\r\n    else{\r\n        window.alert(\"Successfully Logged In\");\r\n        history.push(\"/\");\r\n    }\r\n    }\r\n    return (\r\n        <div>\r\n            <div className=\"container mt-5\">\r\n           <h4 className=\"Signup-header\">logIn</h4>\r\n           <form method=\"POST\" className=\"register-form\">\r\n               <div>\r\n           <div className=\"formgroup\">\r\n               <label htmlFor=\"Email\">\r\n                   <i className=\"zmdi zmdi-email material-icons-name\"></i>\r\n               </label>\r\n                   <input className=\"email\" name=\"Email\" value={login.Email} onChange={handleLogin} autoComplete=\"off\" placeholder=\"Your Email\"></input>\r\n           </div>\r\n           <div className=\"formgroup\">\r\n               <label htmlFor=\"Password\">\r\n                   <i className=\"zmdi zmdi-lock material-icons-name\"></i>\r\n               </label>\r\n                   <input type=\"password\" className=\"password\" name=\"Password\" value={login.Password} onChange={handleLogin} autoComplete=\"off\" placeholder=\"Enter Password\"></input>\r\n           </div>\r\n           <input type=\"submit\" className=\"button_register\"  onClick={postlogindata} value=\"Log In\"/>\r\n           <NavLink className=\"already\" to=\"/signUp\">Create an account</NavLink>\r\n           </div>\r\n           <img alt=\"image_login\" className=\"signup_image\" src=\"login-background.jpg\"/>\r\n           </form>\r\n           </div>\r\n           </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React,{useState} from 'react'\r\nimport './Signup.css'\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nconst Signup = () => {\r\n    const history=useHistory();\r\n    const [user,setUser]=useState(\r\n        {\r\n           Name:\"\",\r\n           Email:\"\",\r\n           Password:\"\",\r\n           cPassword:\"\" \r\n        }\r\n    )\r\n    let name,value;\r\n    const handleInputs=(e)=>\r\n    {\r\n    name=e.target.name;\r\n    value=e.target.value;\r\n    setUser({...user,[name]:value})\r\n    }\r\n    const PostData=async (e)=>\r\n        {\r\n         e.preventDefault();\r\n         const {Name,Email,Password,cPassword}=user;\r\n        const res =await fetch('/register',\r\n        {\r\n            method:\"POST\",\r\n            headers:{\"Content-Type\":\"application/json\"},\r\n            body:JSON.stringify({\r\n                Name,\r\n                Email,\r\n                Password,\r\n                cPassword\r\n            })\r\n\r\n        })\r\n        const data= await res.json();\r\n        if(data.status===422 ||data.error===\"Please fill all the details\")\r\n        {\r\n            window.alert(\"Invalid Registration\");\r\n        }\r\n        else{\r\n            window.alert(\"Registered Successfully\");\r\n            history.push(\"/login\")\r\n        }\r\n        }\r\n    return (\r\n        <div className=\"signup\">\r\n            <div className=\"container mt-5\">\r\n           <h4 className=\"Signup-header\">Sign up</h4>\r\n           <form method=\"POST\" className=\"register-form\">\r\n               <div>\r\n           <div className=\"formgroup\">\r\n               <label htmlFor=\"Name\">\r\n                   <i className=\"zmdi zmdi-account material-icons-name\"></i>\r\n               </label>\r\n                   <input className=\"name\" name=\"Name\" autoComplete=\"off\" value={user.name} onChange={handleInputs} placeholder=\"Your Name\"></input>\r\n           </div>\r\n           <div className=\"formgroup\">\r\n               <label htmlFor=\"Email\">\r\n               <i className=\"zmdi zmdi-email material-icons-name\"></i>\r\n               </label>\r\n                   <input type=\"email\" className=\"email\" name=\"Email\" autoComplete=\"off\" value={user.email} onChange={handleInputs} placeholder=\"Enter Email\"></input>\r\n           </div>\r\n           <div className=\"formgroup\">\r\n               <label htmlFor=\"Password\">\r\n               <i className=\"zmdi zmdi-lock material-icons-name\"></i>\r\n               </label>\r\n                   <input type=\"password\" className=\"password\" name=\"Password\" autoComplete=\"off\" value={user.password} onChange={handleInputs} placeholder=\"Enter Password\"></input>\r\n           </div>\r\n           <div className=\"formgroup\">\r\n               <label htmlFor=\"cPassword\">\r\n               <i className=\"zmdi zmdi-lock material-icons-name\"></i>\r\n               </label>\r\n                   <input type=\"password\" className=\"cpassword\" name=\"cPassword\" autoComplete=\"off\" value={user.cpassword} onChange={handleInputs} placeholder=\"Confirm Password\"></input>\r\n           </div>\r\n           <input type=\"submit\" className=\"button_register\" value=\"Register\" onClick={PostData}/>\r\n           <NavLink className=\"already\" to=\"/login\">I am already registered</NavLink>\r\n           </div>\r\n           <img className=\"signup_image\" alt=\"image_signup\" src=\"signup.jpg\"/>\r\n           </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","import React,{useState,useEffect} from 'react'\r\nimport './Dashbaord.css'\r\nimport {useHistory} from 'react-router-dom';\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport ThumbDownIcon from \"@material-ui/icons/ThumbDown\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n    var new_message,i=0;  \r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          maxWidth: 345\r\n        },\r\n        media: {\r\n          height: 0,\r\n          paddingTop: \"56.25%\" \r\n        }\r\n      }));         \r\nconst Dashboard = () => {\r\n    const classes = useStyles();\r\n     const history=useHistory();\r\n     const [data,storedata]=useState(\r\n         {\r\n            message:\"\"\r\n         }\r\n     );\r\n     const [message_list,storelist]=useState(\r\n         [{\r\n            message:\"\"\r\n         }]\r\n     );\r\n     const [like,setlike]=useState(0)\r\n     const [dislike,setdislike]=useState(0)\r\n     const [like_id,setlike_id]=useState([])\r\n     const [dislike_id,setdislike_id]=useState([]) \r\n     let name,value;\r\n     const datahandle=(e)=>\r\n     {\r\n       name=e.target.name;\r\n       value=e.target.value;\r\n       storedata({...data,[name]:value});\r\n     }\r\n  const callDashboard=async(e)=>\r\n    { \r\n        e.preventDefault();\r\n        const {message}=data;\r\n        new_message=message;\r\n     try\r\n     {\r\n      const res=await fetch('/',\r\n      { \r\n          method:\"POST\",\r\n          headers:{\r\n              \"Content-Type\":\"application/json\"\r\n          },\r\n          body:JSON.stringify({\r\n              message ,\r\n              like,\r\n              like_id,\r\n              dislike,\r\n              dislike_id \r\n          })\r\n          \r\n      })\r\n    const data=await res.json();\r\n      if(!res.status===200||!data)\r\n      {  \r\n          const error=new Error(res.error)\r\n          throw error;\r\n      }\r\n      else{\r\n          storedata({...data,message:\"\"})}\r\n          getter()\r\n    }\r\n     catch(err)\r\n     {\r\n      console.log(err);\r\n      history.push('/login');\r\n     }\r\n    }\r\n    useEffect(()=>\r\n    {\r\n      fetch('/getter').then(res=>\r\n        { \r\n            if(res.ok)\r\n            return res.json()\r\n        }).then(jsonRes=>\r\n            {\r\n                storelist(jsonRes);\r\n            })\r\n    },[])\r\n    function getter()\r\n    {\r\n        fetch('/getter').then(res=>\r\n            { \r\n                if(res.ok)\r\n                return res.json()\r\n            }).then(jsonRes=>\r\n                {\r\n                    storelist(jsonRes);\r\n                })\r\n              }\r\n    return (\r\n        <div>\r\n            <form method=\"POST\">\r\n            <h1 className=\"welcome\">WELCOME</h1>\r\n            <div className=\"lister\">\r\n            <input id=\"input_box\" value={data.message} placeholder=\"Type Your Post\" name=\"message\" onChange={datahandle} type=\"text\" className=\"text_box\"/>\r\n            <input value=\"Share\" type=\"submit\" onClick={callDashboard} className=\"button\"/>\r\n           </div> \r\n            </form>\r\n            <div className=\"message_list\"> \r\n            {message_list.map(element=>{\r\n                    if(element.messages!==undefined && element.messages.length!==0)\r\n                    { \r\n                    return element.messages.map((messenger,index)=>(<div className=\"messager\" key={index}>\r\n                        <Card className={classes.root}>\r\n       <CardHeader\r\n        avatar={\r\n          <Avatar style={{backgroundColor:\"blueviolet\"}} >\r\n            {element.Name.charAt(0)}\r\n          </Avatar>\r\n        }\r\n        action={\r\n            <IconButton aria-label=\"edit\">\r\n              <EditIcon onClick={async()=>\r\n                        {   i++; \r\n                             setlike(messenger.like);\r\n                            setlike_id(messenger.like_id)\r\n                            setdislike(messenger.dislike);\r\n                            setdislike_id(messenger.dislike_id);\r\n                            window.scrollTo({\r\n                            top: 0,\r\n                            behavior: \"smooth\"\r\n                          });\r\n                               try\r\n                             { \r\n                                 const res=await fetch('/delete',\r\n                                { \r\n                                    method:\"POST\",\r\n                                    headers:{\r\n                                        \"Content-Type\":\"application/json\"\r\n                                    },\r\n                                    body:JSON.stringify({\r\n                                      index:index,  \r\n                                      id:element._id,\r\n                                      message:messenger.message\r\n                                    })\r\n                                    \r\n                                })\r\n                                var data1=await res.json();\r\n                              if(!res.status===200||!data)\r\n                              {  \r\n                                  const error=new Error(res.error)\r\n                                  throw error;\r\n                              }\r\n                            }\r\n                            catch(err)\r\n                             {\r\n                              console.log(err);\r\n                              }\r\n                              if(data1.message!==\"Not Delete successfull\")\r\n                              { \r\n                                 storedata(messenger.message) \r\n                                document.getElementById(\"input_box\").\r\n                                value=messenger.message;\r\n                              try{\r\n                              const res1=await fetch('/edit',\r\n                              {  \r\n                                  method:\"POST\",\r\n                                  headers:{\r\n                                      \"Content-Type\":\"application/json\"\r\n                                  },\r\n                                  body:JSON.stringify({\r\n                                    index:index,  \r\n                                    id:element._id,\r\n                                    message:messenger.message,\r\n                                    new_message:data.message\r\n                                  })\r\n                                \r\n                              })\r\n                              const data=await res1.json();\r\n                              console.log(data)\r\n                              if(!res1.status===200||!data)\r\n                              {  \r\n                                  const error=new Error(res1.error)\r\n                                  throw error;\r\n                              }\r\n                             }\r\n                             catch(err)\r\n                             {\r\n                              console.log(err);\r\n                              }\r\n                                } \r\n                                getter(); \r\n                         }}/>\r\n            </IconButton>\r\n          }\r\n        title={element.Name}\r\n        subheader={element.Email}\r\n      /> \r\n       <CardContent>\r\n        <Typography  variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {messenger.message}\r\n        </Typography>\r\n      </CardContent>\r\n       <CardActions disableSpacing>\r\n      \r\n    <IconButton aria-label=\"like\">\r\n                     <ThumbUpAltIcon  onClick={async()=>\r\n                        {   \r\n                            try{\r\n                                const res1=await fetch('/like',\r\n                                {  \r\n                                    method:\"POST\",\r\n                                    headers:{\r\n                                        \"Content-Type\":\"application/json\"\r\n                                    },\r\n                                    body:JSON.stringify({\r\n                                      index:index,  \r\n                                      id:element._id,\r\n                                      message:messenger.message\r\n                                    })\r\n                                    \r\n                                })\r\n                                const data=await res1.json();\r\n                                if(!res1.status===200)\r\n                                {  \r\n                                    const error=new Error(res1.error)\r\n                                    throw error;\r\n                                }\r\n                               }\r\n                               catch(err)\r\n                               {\r\n                                console.log(err);\r\n                                }\r\n                                getter();\r\n                        }}/></IconButton><span>{messenger.like}</span><IconButton aria-label=\"dislike\"><ThumbDownIcon onClick={async()=>\r\n                        {\r\n                            try{\r\n                                const res1=await fetch('/dislike',\r\n                                {  \r\n                                    method:\"POST\",\r\n                                    headers:{\r\n                                        \"Content-Type\":\"application/json\"\r\n                                    },\r\n                                    body:JSON.stringify({\r\n                                      index:index,  \r\n                                      id:element._id,\r\n                                      message:messenger.message\r\n                                    })\r\n                                    \r\n                                })\r\n                                const data=await res1.json();\r\n                                if(!res1.status===200)\r\n                                {  \r\n                                    const error=new Error(res1.error)\r\n                                    throw error;\r\n                                }\r\n                               }\r\n                               catch(err)\r\n                               {\r\n                                console.log(err);\r\n                                }\r\n                                getter();\r\n                        }}\r\n                        /></IconButton><span >{messenger.dislike}</span>\r\n                        <IconButton aria-label=\"delete\">\r\n          <DeleteIcon onClick={async()=>\r\n                    {   \r\n                         try\r\n                         {\r\n                          const res=await fetch('/delete',\r\n                          { \r\n                              method:\"POST\",\r\n                              headers:{\r\n                                  \"Content-Type\":\"application/json\"\r\n                              },\r\n                              body:JSON.stringify({\r\n                                index:index,  \r\n                                id:element._id,\r\n                                message:messenger.message\r\n                              })\r\n                              \r\n                          })\r\n                          const data=await res.json();\r\n                          if(!res.status===200||!data)\r\n                          {  \r\n                              const error=new Error(res.error)\r\n                              throw error;\r\n                          }\r\n                         }\r\n                         catch(err)\r\n                         {\r\n                          console.log(err);\r\n                          }\r\n                          getter();\r\n                     } }/>\r\n        </IconButton></CardActions></Card> </div>\r\n                     )) \r\n                }  \r\n                else\r\n                {\r\n                    return null;\r\n                }\r\n}) }\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dashboard\r\n","import React from 'react'\nimport Navbar from \"./components/Navbar\"\nimport Login from './components/Login'\nimport Signup from './components/Signup'\nimport Dashboard from './components/Dashboard'\nimport {Route} from 'react-router-dom'\nconst App = () => {\n  return (\n    <div>\n      <Navbar/>\n      <Route exact path=\"/\">\n      <Dashboard/>\n      </Route>\n      <Route path=\"/signUp\">\n      <Signup/>\n      </Route>\n      <Route path=\"/login\">\n      <Login/>\n      </Route>\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}